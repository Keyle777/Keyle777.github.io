{"meta":{"title":"Keyleの小窝","subtitle":"Keyle的个人博客","description":"一个技术宅的个人小屋","author":"Keyle777","url":"https://keyle777.github.io","root":"/"},"pages":[{"title":"","date":"2023-06-13T08:39:17.574Z","updated":"2023-06-13T08:38:15.000Z","comments":true,"path":"manifest.json","permalink":"https://keyle777.github.io/manifest.json","excerpt":"","text":"{\"name\":\"Ariasakaの小窝\",\"short_name\":\"Ariasakaの小窝\",\"theme_color\":\"var(--lyx-theme)\",\"background_color\":\"var(--lyx-theme)\",\"display\":\"standalone\",\"scope\":\"/\",\"start_url\":\"/\",\"icons\":[{\"src\":\"/img/16.png\",\"sizes\":\"16x16\",\"type\":\"image/png\"},{\"src\":\"/img/36.png\",\"sizes\":\"36x36\",\"type\":\"image/png\"},{\"src\":\"/img/48.png\",\"sizes\":\"48x48\",\"type\":\"image/png\"},{\"src\":\"/img/72.png\",\"sizes\":\"72x72\",\"type\":\"image/png\"},{\"src\":\"/img/96.png\",\"sizes\":\"96x96\",\"type\":\"image/png\"},{\"src\":\"/img/144.png\",\"sizes\":\"144x144\",\"type\":\"image/png\"},{\"src\":\"/img/180.png\",\"sizes\":\"180X180\",\"type\":\"image/png\"},{\"src\":\"/img/apple-touch-icon.png\",\"sizes\":\"180x180\",\"type\":\"image/png\"},{\"src\":\"/img/192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\"},{\"src\":\"/img/256.png\",\"sizes\":\"256x256\",\"type\":\"image/png\"},{\"src\":\"/img/512.png\",\"sizes\":\"512x512\",\"type\":\"image/png\"}],\"splash_pages\":null}"},{"title":"关于","date":"2021-03-30T07:57:51.000Z","updated":"2023-06-13T08:38:12.000Z","comments":true,"path":"about/index.html","permalink":"https://keyle777.github.io/about/index.html","excerpt":"","text":""},{"title":"","date":"2023-06-13T08:39:17.575Z","updated":"2023-06-13T08:38:16.000Z","comments":true,"path":"package.json","permalink":"https://keyle777.github.io/package.json","excerpt":"","text":"{\"name\":\"ariasakablog\",\"version\":\"1.0.17\",\"description\":\"SpeedUp!\",\"main\":\"index.js\",\"scripts\":{\"test\":\"echo \\\"Error: no test specified\\\" && exit 1\"},\"author\":\"\",\"license\":\"ISC\"}"},{"title":"bangumis","date":"2022-07-16T02:35:32.000Z","updated":"2023-06-13T08:38:12.000Z","comments":true,"path":"bangumis/index.html","permalink":"https://keyle777.github.io/bangumis/index.html","excerpt":"","text":""},{"title":"分类","date":"2022-07-03T12:48:08.000Z","updated":"2023-06-14T06:06:37.202Z","comments":true,"path":"categories/index.html","permalink":"https://keyle777.github.io/categories/index.html","excerpt":"","text":"music: 1"},{"title":"朋友圈","date":"2022-01-29T07:23:17.000Z","updated":"2023-06-13T08:38:13.000Z","comments":true,"path":"fcircle/index.html","permalink":"https://keyle777.github.io/fcircle/index.html","excerpt":"","text":"🎣 钓鱼 与主机通讯中…… var fdataUser = { apiurl: '' }"},{"title":"fontawesome对照","date":"2022-11-25T00:16:09.000Z","updated":"2023-06-13T08:38:13.000Z","comments":true,"path":"fontawesome/index.html","permalink":"https://keyle777.github.io/fontawesome/index.html","excerpt":"","text":"window.parent.postMessage(object,'*'); document.getElementById('ifm').scroll(0,document.getElementById('ifm').document.body.scrollHeight);"},{"title":"小空调","date":"2022-11-24T23:37:35.000Z","updated":"2023-06-13T08:38:15.000Z","comments":true,"path":"kongtiao/index.html","permalink":"https://keyle777.github.io/kongtiao/index.html","excerpt":"","text":""},{"title":"声明","date":"2023-06-13T09:11:00.000Z","updated":"2023-06-13T09:12:22.022Z","comments":true,"path":"license/index.html","permalink":"https://keyle777.github.io/license/index.html","excerpt":"","text":"Copyright© Keyle777 2023 声明 | 版权协议 为了保持文章质量，并保持互联网的开放共享精神，保持页面流量的稳定，综合考虑下本站的所有原创文章均采用cc协议中比较严格的创作共用-非商业性-禁止演绎 4.0 国际标准。这篇文章主要想能够更加清楚明白的介绍本站的协议标准和要求。方便您合理的使用本站的文章。 本站无广告嵌入和商业行为。违反协议的行为不仅会损害原作者的创作热情，而且会影响整个版权环境。强烈呼吁您能够在转载时遵守协议。遵守协议的行为几乎不会对您的目标产生负面影响，鼓励创作环境是每个创作者的期望。 博客的分类介绍 经验分享包含原创内容，原创内容的非商用转载必须为完整转载且标注出处的带有超链接功能的完整url链接（需能点击）或访问原文之类字样的超链接。 转载内容为转载内容，均标注了出处。建议使用原链接打开，尊重原作者。所有转载内容尽可能为完整转载（如果有部分内容有问题可能会由部分删减和补充）并进行样式调整以适合本博客。如果转载该部分内容需要联系原作者。 你可以做什么？ 只要您遵守本页的许可，您可以自由地共享文章的内容 — 在任何媒介以任何形式复制、发行本作品。并且无需通知作者。 你需要遵守什么样的许可？ 署名 您必须标注内容的来源，您需要在文章开头部分（或者明显位置）标注原文章链接（建议使用超链接提升阅读体验）。 禁止商用 本站内容免费向互联网所有用户提供，分享本站文章时禁止商业性使用、禁止在转载页面中插入广告（例如谷歌广告、百度广告）、禁止阅读的拦截行为（例如关注公众号、下载App后观看文章）。 禁止演绎 分享全部内容（无修改） 您需要在文章开头部分（或者明显位置）标注原文章链接（建议使用超链接） 分享部分截取内容或者衍生创作 目前本站全部原创文章的衍生品禁止公开分享和分发。如有更好的修改建议，可以在对应文章下留言。如有衍生创作需求，可以在评论中联系。 什么内容会被版权保护 包括但不限于： 文章封面图片 文章标题和正文 站点图片素材（不含主题自带素材） 例外情况 本着友好互相进步的原则，被本站友链收录的博客允许博客文章内容的衍生品的分享和分发，但仍需标注出处。 本着互联网开放精神，您可以在博客文章下方留言要求授权博文的衍生品的分享和分发，标注您的网站地址。 作者原创代码及网站源代码协议 网站所有代码采用MIT协议，如有不同，作者会进行标注 随便扒站吧！ 网站本身有关 本站已开启存储桶全站加速，接入了灵天盾CDN，请刷流量的耗子尾汁！！！"},{"title":"","date":"2023-06-16T08:36:53.455Z","updated":"2023-06-16T08:36:53.452Z","comments":true,"path":"messageboard/index.html","permalink":"https://keyle777.github.io/messageboard/index.html","excerpt":"","text":"说说你的建议吧... 你也可以私发我的邮件keyle192@gmail.com寻求帮助或者提供建议。 隐藏/显示弹幕（缓解卡顿） document.title = '留言板 | Keyleの小窝';"},{"title":"友链","date":"2022-07-03T12:40:57.000Z","updated":"2023-06-16T08:35:56.360Z","comments":true,"path":"links/index.html","permalink":"https://keyle777.github.io/links/index.html","excerpt":"","text":"🎣 钓鱼 冰糖红茶 “冰糖红茶”博客魔改组织的大佬们 小冰【冰】 做个有梦想的人！ Akilar【糖】 期待您的光临！ 张洪Heo【红】 分享设计与科技生活 贰猹【茶】 用这生命中的每一秒，给自己一个不后悔的未来 我的信息Butterfly & MengDfluidvolantishtml12345- name: Keyleの小窝 link: https://keyle777.github.io/ avatar: https://bu.dusays.com/2022/12/15/639a9ebbbc1ad.jpg descr: 人有悲欢离合 月有阴晴圆缺 siteshot: https://vercel.yisous.xyz/img/siteshot.png123456- &#123; title: &#x27;Keyleの小窝&#x27;, intro: &#x27;人有悲欢离合 月有阴晴圆缺&#x27;, link: &#x27;https://keyle777.github.io/&#x27;, image: &#x27;https://bu.dusays.com/2022/12/15/639a9ebbbc1ad.jpg&#x27;&#125;123456- title: Keyleの小窝 avatar: https://bu.dusays.com/2022/12/15/639a9ebbbc1ad.jpg url: https://keyle777.github.io/ screenshot: https://yisous.xyz/img/siteshot.png keywords: 个人博客 description: 人有悲欢离合 月有阴晴圆缺1&lt;a href=&quot;https://yisous.xyz&quot;&gt;&lt;img src=&quot;https://bu.dusays.com/2022/12/15/639a9ebbbc1ad.jpg&quot; alt=&quot;avatar&quot;&gt;Keyleの小窝&lt;/a&gt; 推荐标签衡量标准1.网站没有不良内容 2.文章质量较高 3.文章较多/或者质量过硬 如何申请友链？ 点下面的按钮！ 快速添加友链"},{"title":"好听的音乐","date":"2022-07-14T08:37:40.000Z","updated":"2023-06-13T08:38:16.000Z","comments":true,"path":"musics/index.html","permalink":"https://keyle777.github.io/musics/index.html","excerpt":"","text":"好听的歌 歌曲排行榜 博主会每隔一段时间将自己近期爱听的歌排行在下面 2022-7 咕咕咕…"},{"title":"敲木鱼","date":"2022-11-25T00:16:09.000Z","updated":"2023-06-13T08:38:16.000Z","comments":true,"path":"muyu/index.html","permalink":"https://keyle777.github.io/muyu/index.html","excerpt":"","text":"功德：0 功德+100 .muyu-layout { background: black; display: flex; width: 100%; border-radius: 20px; position: relative; justify-content: center; height: 90vh; align-items: center; } #muyu-box img { width: 250px; } #jishu-box{ top: 55px; position: absolute; } #muyu-box p { color: white; opacity: 0; font-size: 25px; } #jishu-box p { color: white; font-size: 30px; } var gongde = document.getElementById(\"gongde\"); var muyu = document.getElementById(\"muyu\"); var jishu = document.getElementById(\"jishu-box\"); var mp3Url = \"/music/muyu.mp3\"; var player = new Audio(mp3Url); var num = 0; muyu.addEventListener(\"click\", function () { num+=100; player.load(); player.play(); muyu.animate([{ transform: 'scale(0.85)' }, { transform: 'scale(1.03)' }, { transform: 'scale(1)' }], 500); gongde.animate([{ opacity: 0, transform: 'translateY(0)' },{ opacity: 0.3, transform: 'translateY(-10px)' },{ opacity: 0.8, transform: 'translateY(-20px)' }, { opacity: 1, transform: 'translateY(-30px)' }, { opacity: 0.8, transform: 'translateY(-35px)' }, { opacity: 0, transform: 'translateY(-40px)' }], 600); jishu.innerHTML = \"功德：\"+num+\"\"; });"},{"title":"主站","date":"2023-06-13T03:38:05.000Z","updated":"2023-06-14T05:30:03.511Z","comments":true,"path":"othersite/index.html","permalink":"https://keyle777.github.io/othersite/index.html","excerpt":"","text":"一些博主搭建的其它的站点： PS：划掉的表示已挂 域名 用处 搭建原因 https://keyle777.github.io 博客，也是主站（默认无www） 分享一些东西 https://keyle777.github.io OnlineJudge系统 用于自己练习信奥赛题目其实是搞来象征意义的 status.yisous.xyz 网站状态监控 用于监控网站的状态，基于uptimeRobot mc.yisous.xyz Minecraft服务器 用来联机玩，类似于粉丝服那种，还没弄好 tc.yisous.xyz Typecho测试站 看看typecho怎么样，搞来玩的，已经由Wordpress迁移至当前的Typecho，未来服务器文档之后可能会换用 yisous.tk/lyxop.xyz 短链接生成器 制作短链接，使用本站域名，技术有限，所以很丑 bbs.yisous.xyz LYXの论坛 交流一些事情，也可以闲聊，还没弄说是交流其实还是搞来象征意义搞来玩的 博主的一些域名 域名 用处 yisous.xyz 主要使用的域名，当时看到dynadot14块一年就买了，这个名字就是念起来顺口 lyxop.xyz 注册拿来给副站用的，使用blog.lyxop.xyz进入主站。由于域名续费太贵，所以打算以后换成yisous.tk，其余一样 ariasaka.top 在硅云白嫖的一个域名，后续可能会作为主域名使用 lyxoff2233.eu.org 以前的eu.org域名，还不错，后面要拿来想办法用一用 lyxofficial.eu.org 图一乐域名 yisous.tk 20年为了搭树莓派服搞的域名，可是树莓派没多久就被我超坏了，现在就买不起了，后来这个域名过期，现在又弄回来作为副站使用，使用blog.yisous.tk进入主站，www和根域名主站用于提供短域名服务（已挂）。 注意：本博客强制HTTPS，旧电脑可能会出现问题。 #article-container a:not(.post-meta__tags):not(img):not(a[data-fancybox]):hover{ border-radius: 6px; background-color: #425aef; text-decoration: none!important; color:#fff!important; border:none; box-shadow: #dadada 0 0 8px 2px; } #article-container a:not(.post-meta__tags):not(.headerlink):not(a[data-fancybox]){ /* padding:0 2px; */ /* text-decoration: 1px solid #425aef; */ /* text-decoration: underline; */ border-bottom: 2px solid #425aef; color:var(--font-color); padding:4px }"},{"title":"说说","date":"2023-06-16T08:37:50.743Z","updated":"2023-06-16T08:37:50.741Z","comments":true,"path":"speaks/index.html","permalink":"https://keyle777.github.io/speaks/index.html","excerpt":"","text":"function doSpeaks() { document.title = '说说 | Keyleの小窝'; bbtalk.init({ appId: \"\", appKey: \"\", serverURLs: '', pageSize:1919810 }) } document.addEventListener('DOMContentLoaded', (e) => { doSpeaks(); }) document.addEventListener('pjax:complete', (e) => { doSpeaks(); })"},{"title":"标签","date":"2022-07-03T12:51:29.000Z","updated":"2023-06-13T08:38:16.000Z","comments":true,"path":"tags/index.html","permalink":"https://keyle777.github.io/tags/index.html","excerpt":"","text":""},{"title":"工具","date":"2022-07-13T07:23:02.000Z","updated":"2023-06-13T08:38:17.000Z","comments":true,"path":"tools/index.html","permalink":"https://keyle777.github.io/tools/index.html","excerpt":"","text":"镜像站常用的PyPi/npm/SDK镜像站 TUNA 清华大学开源镜像站 豆瓣PYPI源 豆瓣PYPI镜像站 jsDelivr jsDelivr静态资源加速（GFW已墙） unpkg 另一个静态资源加速CDN（没墙） 资源下载类好用的资源下载/收录站 MSDN,我告诉你 微软MSDNED2K镜像收录站 唧唧Down 下载B站视频 无损生活 免费下载全网绝大部分无损音乐 百度网盘简易下载助手 特别好用的bd网盘破解器（不知道为什么公众号分享很怕敏感词） 日常工具常用日常工具 计时器 闹钟网计时器 图片系列关于图片的工具 Bigjpg 高清修复图片与降噪 waifu2x 高清修复图片与降噪，性能貌似好一点 jpgrm 高清修复图片与降噪 Sheilds 制作Github项目徽章 极简壁纸 海量高清壁纸美图&二次元图片 常用测试网站测试一些基础功能 还没做完呢 你瞅啥？还妹做完呢！"},{"title":"","date":"2023-06-16T08:39:13.564Z","updated":"2023-06-16T08:39:13.563Z","comments":true,"path":"update/index.html","permalink":"https://keyle777.github.io/update/index.html","excerpt":"","text":""},{"title":"早报","date":"2022-11-24T23:37:35.000Z","updated":"2023-06-13T08:38:17.000Z","comments":true,"path":"zaobao/index.html","permalink":"https://keyle777.github.io/zaobao/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2023-06-16T07:00:37.497Z","updated":"2023-06-16T07:00:37.497Z","comments":true,"path":"posts/4a17b156/","link":"","permalink":"https://keyle777.github.io/posts/4a17b156/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Mybatis下的创建与删除索引","slug":"Mybatis下的创建与删除索引","date":"2023-06-15T01:45:26.000Z","updated":"2023-06-15T01:45:26.000Z","comments":true,"path":"posts/660c0404/","link":"","permalink":"https://keyle777.github.io/posts/660c0404/","excerpt":"","text":"Mybatis下的创建与删除索引 事情的起因是这样的，公司安排我做一个提高查询速度的优化，于是我就想到了在数据库添加索引，本来以为此事很简单，写2条语句就能完成，但是却意外的让我踩了很多坑。 MySQL创建与删除索引 在MySQL中，创建普通索引的语句很简单，这里我只列举一种方式，其他方式另查百度即可： 12CREATE INDEX idx_z_9777769dm8x_dh ON z_9777769dm8x(dh);格式是上面这样，idx_z_9777769dm8x_dh是索引名，一般情况下是由：idx_你的表名_索引列的名称，on 后面是表名，括号中是要加索引的列，可以是多个。 删除普通索引： 123DROP INDEX idx_z_475ts5v488v_id ON z_475ts5v488v;索引名：idx_z_475ts5v488v_id表名：z_475ts5v488v 引入项目 起初，我以为将此语句改成动态SQL引入项目中，调用接口即可完成功能的优化，但是事情却并不是我想的这么简单。 当我使用上面的语句，并改为动态SQL后： 123456&lt;sql id=&quot;delIndex&quot;&gt; DROP INDEX #&#123;indexName&#125; ON #&#123;tableName&#125;;&lt;/sql&gt;&lt;update id=&quot;delAnIndex&quot;&gt; &lt;include refid=&quot;delIndex&quot; /&gt;&lt;/update&gt; 123456&lt;sql id=&quot;createIndex&quot;&gt; CREATE INDEX #&#123;idx_users_name&#125; ON $&#123;users&#125;(dh);&lt;/sql&gt;&lt;update id=&quot;createUsersIndex&quot;&gt; &lt;include refid=&quot;createIndex&quot; /&gt;&lt;/update&gt; 正常调用创建或删除方法并传入值后： 1Cannot determine value type from string &#x27;z_9777769dm8x&#x27;; nested exception is java.sql.SQLDataException: Cannot determine value type from string &#x27;z_9777769dm8x&#x27; with root cause 查询后得知： 1这个异常提示无法从字符串 &#x27;z_9777769dm8x&#x27; 中确定值类型，这可能是由于 MyBatis 在将字符串转换为参数值时出现了问题。在 MyBatis 中，如果您使用了命名参数或占位符，MyBatis 会尝试将字符串转换为正确的参数类型，以便正确地执行 SQL 查询或更新操作。 然后我就开始了无穷无尽的修改模式，开始把xml里面修改成只有一个占位符的形式，SQL语句在Java中写，传入后仍然是上面这个错误。之后我便查询各方资料，更改了一种xml写法，如下： 123456789101112131415&lt;!-- 创建索引 --&gt;&lt;update id=&quot;createIndex&quot; parameterType=&quot;java.util.Map&quot;&gt; CREATE INDEX `$&#123;params.indexName&#125;` ON `$&#123;params.tableName&#125;`(`$&#123;params.columnName&#125;`);&lt;/update&gt;&lt;!-- 删除索引 --&gt;&lt;update id=&quot;dropIndex&quot;&gt; ALTER TABLE `$&#123;params.tableName&#125;` DROP INDEX `$&#123;params.indexName&#125;`;&lt;/update&gt;&lt;!-- 判断索引是否存在 --&gt;&lt;select id=&quot;isIndexExists&quot; resultType=&quot;int&quot; parameterType=&quot;java.util.Map&quot;&gt; SELECT COUNT(*) FROM information_schema.statistics WHERE table_schema = DATABASE() AND table_name = #&#123;params.tableName&#125; AND index_name = #&#123;params.indexName&#125;&lt;/select&gt; 方法依次是： 123int createIndex(@Param(&quot;params&quot;) Map&lt;String, String&gt; params);int dropIndex(@Param(&quot;params&quot;) Map&lt;String, String&gt; params);int isIndexExists(@Param(&quot;params&quot;) Map&lt;String, String&gt; params); 此时在调用创建索引的方法，便可以正常执行： 123456789101112131415161718192021222324252627282930public String addAllIndex()&#123; logger.info(&quot;开始创建k_usertable的索引...&quot;); List&lt;Map&lt;String, Object&gt;&gt; tableNamesAndIds = usertableDao.selectMaps(null); List&lt;String&gt; tableNames = tableNamesAndIds.stream() .map(map -&gt; (String) map.get(&quot;copyTableName&quot;)) .collect(Collectors.toList()); List&lt;Long&gt; ids = tableNamesAndIds.stream() .map(map -&gt; (Long) map.get(&quot;id&quot;)) .collect(Collectors.toList()); List&lt;Tcolumn&gt; dhs = new ArrayList&lt;&gt;(); String dhColumnName; for (Map&lt;String, Object&gt; tableNamesAndId : tableNamesAndIds) &#123; dhs = tcolumnDao.selectTcolumnByDisplaylabel(tableNamesAndId.get(&quot;id&quot;).toString(), &quot;档号&quot;); if (dhs.size() != 0) &#123; dhColumnName = (String) dhs.get(0).getFieldname(); String indexName = &quot;idx_&quot; + tableNamesAndId.get(&quot;copytablename&quot;) + &quot;_DH&quot;; Map&lt;String, String&gt; params = new HashMap&lt;&gt;(); params.put(&quot;indexName&quot;, indexName); params.put(&quot;tableName&quot;, (String) tableNamesAndId.get(&quot;copytablename&quot;)); params.put(&quot;columnName&quot;, dhColumnName); int indexExists = usertableDao.isIndexExists(params); if (indexExists != 0) &#123; continue; // skip to the next iteration of the loop &#125; usertableDao.createIndex(params); &#125; &#125; logger.info(&quot;索引创建完毕&quot;); return &quot;索引创建完毕&quot;;&#125; 总结 究其原因，我认为是XML中创建和删除索引的写法有问题。不管怎样，算是积累了经验，下次遇到就会有印象。","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://keyle777.github.io/tags/Java/"}]},{"title":"Quartz-定时任务的简单使用","slug":"Quartz-定时任务的简单使用","date":"2023-06-15T01:45:26.000Z","updated":"2023-06-15T01:45:26.000Z","comments":true,"path":"posts/2f3b81ad/","link":"","permalink":"https://keyle777.github.io/posts/2f3b81ad/","excerpt":"","text":"Quartz的分享 前言：定时任务的使用，是我们在平时开发项目的过程中经常要用到的，如果你使用的是Spring boot开发那么常用的可能是它本身自带的Scheduled Tasks，它的使用也是非常简单，下面我也介绍了常用的方法。 今天我要分享的主要是关于Quartz在项目中的使用，这一部分在Scheduled Tasks介绍后有所介绍。 Spring Boot提供了一种方便的方式来创建和管理定时任务，这就是Spring框架中的Scheduled Tasks。Scheduled Tasks是一种基于注解的方式，让开发人员可以轻松地创建和管理定时任务。 在Spring Boot中，你可以使用@Scheduled注解来标注一个方法，使其成为一个定时任务。@Scheduled注解可以接收一个cron表达式或者一个固定的时间间隔，以指定任务的执行时间。 下面是一个使用@Scheduled注解创建定时任务的例子： 12345678@Componentpublic class MyScheduledTask &#123; @Scheduled(cron = &quot;0 0 0 * * ?&quot;) public void runTask() &#123; // 任务执行的逻辑代码 &#125;&#125; 在上面的例子中，@Scheduled注解标注的runTask()方法是一个每天凌晨执行的定时任务。其中，cron表达式0 0 0 * * ?表示每天的0点0分0秒执行。 除了cron表达式，@Scheduled注解还支持其他的参数，例如： fixedRate：以固定的时间间隔执行任务，无论任务执行的时间是多少。 fixedDelay：以固定的时间间隔执行任务，任务执行完成后再等待指定时间间隔后再次执行任务。 initialDelay：指定任务第一次执行的延迟时间。 下面是一个使用fixedRate参数创建定时任务的例子： 12345678@Componentpublic class MyScheduledTask &#123; @Scheduled(fixedRate = 5000) public void runTask() &#123; // 任务执行的逻辑代码 &#125;&#125; 在上面的例子中，@Scheduled注解标注的runTask()方法是一个每5秒执行一次的定时任务。其中，fixedRate参数表示任务执行的时间间隔为5秒，无论任务执行的时间是多少。 Spring Boot的Scheduled Tasks可以方便地管理和执行定时任务，使得开发人员可以专注于业务逻辑的实现。同时，Spring Boot还提供了一些有用的工具类和方法，例如TaskScheduler和CronSequenceGenerator等，以更好地支持定时任务的创建和管理。 创建任务 首先，创建某个任务类，使它实现Job接口，重写其**execute()**方法，内部写上自定义业务，即完成了任务的创建。 12345678910111213141516171819202122232425public class MyJob implements Job &#123; @Autowired private AddTmEsMsg addTmEsMsg; private static Logger logger = LoggerFactory.getLogger(MyJob.class); /** * 程序启动后执行删除es中的所有文档数据，然后再将新数据添加至文档。 * @param context * @throws JobExecutionException */ @Override public void execute(JobExecutionContext context) throws JobExecutionException &#123; String indexName = PropertiesUtil.getProperty(&quot;elasticsearch.index&quot;); try &#123; logger.info(&quot;开始执行 deleteTransferData 方法...&quot;); addTmEsMsg.deleteTransferData(indexName); logger.info(&quot;deleteTransferData 方法执行完毕&quot;); logger.info(&quot;开始执行 addTransferDataToEs 方法...&quot;); addTmEsMsg.addTransferDataToEs(indexName); logger.info(&quot;addTransferDataToEs 方法执行完毕&quot;); &#125; catch (IOException e) &#123; throw new JobExecutionException(&quot;无法执行作业&quot;, e); &#125; &#125;&#125; 调用任务 单个任务 1234567891011121314151617181920@Componentpublic class EsRunner implements CommandLineRunner &#123; private static final Logger logger = LoggerFactory.getLogger(EsRunner.class); @Autowired private SchedulerFactoryBean schedulerFactoryBean; @Override public void run(String... args) throws Exception &#123; logger.info(&quot;启动调度器...&quot;); Scheduler scheduler = schedulerFactoryBean.getScheduler(); JobDetail jobDetail = JobBuilder.newJob(MyJob.class).withIdentity(&quot;myJob&quot;, &quot;group1&quot;).build(); Trigger trigger = TriggerBuilder.newTrigger() .withIdentity(&quot;myTrigger&quot;, &quot;group1&quot;) .startNow() .build(); scheduler.scheduleJob(jobDetail, trigger); logger.info(&quot;任务已经启动&quot;); &#125;&#125; 多个任务 如果您需要调度多个任务，您可以考虑使用Quartz的JobDetail和Trigger来实现。您可以为每个任务创建一个JobDetail和一个Trigger，然后将它们添加到调度器中以便执行。 以下是一个示例，演示如何调度多个任务： 12345678910111213141516171819202122232425262728293031323334@Autowiredprivate SchedulerFactoryBean schedulerFactoryBean;@Overridepublic void run(String... args) throws Exception &#123; logger.info(&quot;启动调度器...&quot;); Scheduler scheduler = schedulerFactoryBean.getScheduler(); // 创建第一个任务 JobDetail jobDetail1 = JobBuilder.newJob(MyJob1.class).withIdentity(&quot;myJob1&quot;, &quot;group1&quot;).build(); Trigger trigger1 = TriggerBuilder.newTrigger() .withIdentity(&quot;myTrigger1&quot;, &quot;group1&quot;) .startNow() .build(); scheduler.scheduleJob(jobDetail1, trigger1); // 创建第二个任务 JobDetail jobDetail2 = JobBuilder.newJob(MyJob2.class).withIdentity(&quot;myJob2&quot;, &quot;group1&quot;).build(); Trigger trigger2 = TriggerBuilder.newTrigger() .withIdentity(&quot;myTrigger2&quot;, &quot;group1&quot;) .startNow() .build(); scheduler.scheduleJob(jobDetail2, trigger2); // 创建第三个任务 JobDetail jobDetail3 = JobBuilder.newJob(MyJob3.class).withIdentity(&quot;myJob3&quot;, &quot;group1&quot;).build(); Trigger trigger3 = TriggerBuilder.newTrigger() .withIdentity(&quot;myTrigger3&quot;, &quot;group1&quot;) .startNow() .build(); scheduler.scheduleJob(jobDetail3, trigger3); logger.info(&quot;所有任务已经启动&quot;);&#125; 在这个示例中，我们创建了三个任务，并将它们添加到调度器中以便执行。每个任务都有一个独立的JobDetail和Trigger，并且它们都属于同一个组。您可以根据需要创建更多的任务，并将它们添加到调度器中。 请注意，这个示例中的MyJob1、MyJob2和MyJob3是自定义的任务类，您需要根据自己的需求来实现它们。这些任务类应该实现Job接口，并且需要在execute方法中实现任务的具体逻辑。 重写run()方法，加入自定义的任务并在类上加入@component交由Spring容器管理的对象管理，即可在程序启动的时候执行我们的任务。","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://keyle777.github.io/tags/Java/"}]},{"title":"Redis免费白嫖方法","slug":"Redis免费白嫖方法","date":"2023-06-15T01:45:26.000Z","updated":"2023-06-15T01:45:26.000Z","comments":true,"path":"posts/79546496/","link":"","permalink":"https://keyle777.github.io/posts/79546496/","excerpt":"","text":"地址 免费白嫖地址: 点我进入","categories":[],"tags":[{"name":"白嫖","slug":"白嫖","permalink":"https://keyle777.github.io/tags/%E7%99%BD%E5%AB%96/"}]}],"categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"https://keyle777.github.io/tags/Java/"},{"name":"白嫖","slug":"白嫖","permalink":"https://keyle777.github.io/tags/%E7%99%BD%E5%AB%96/"}]}